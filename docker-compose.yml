services:
  class_tracker:
    image: mm-class-tracker-image
    container_name: mm-class-tracker
    build:
      context: .
      args:
        ENV_TYPE: ${ENV_TYPE}
        UID: "${UID}"
    command: >
      bash -c "
      trap 'echo SIGTERM received, shutting down...; exit' SIGTERM;
      while true; do
        sleep 1;
      done
      "
    tty: true
    user: "${UID}"
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    volumes:
      - class_tracker_node_modules:/app/node_modules
      - class_tracker_python_venv:/app/.venv
      - ./:/app
    env_file:
      - ${ENV_FILE}
    restart: unless-stopped
    depends_on:
      class_tracker_redis:
        condition: service_healthy
    networks:
      - class_tracker_dev

  # redis-overcommit-on-host
  class_tracker_redis_overcommit:
    build: https://github.com/bkuhl/redis-overcommit-on-host.git
    restart: "no"
    privileged: true
    volumes:
      - /proc/sys/vm:/mnt/vm
    networks:
      - class_tracker_dev

  class_tracker_redis:
    image: redis
    container_name: redis-class-tracker
    command: sh -c "redis-server --port ${REDIS_PORT} --requirepass ${REDIS_PASSWORD}"
    env_file:
      - ${ENV_FILE}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "${REDIS_PORT}", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - class_tracker_dev

  class_tracker_scheduler_worker_default:
    image: mm-class-tracker-image
    container_name: class-tracker-scheduler-worker-default
    command: uv run python manage.py scheduler_worker
    user: "${UID}"
    volumes:
      - class_tracker_python_venv:/app/.venv
      - ./:/app
    env_file:
      - ${ENV_FILE}
    restart: unless-stopped
    depends_on:
      class_tracker_redis:
        condition: service_healthy
    networks:
      - class_tracker_dev

volumes:
  class_tracker_node_modules:
    external: true
  class_tracker_python_venv:
    external: true

networks:
  class_tracker_dev:
    external: true
