services:
  django_app:
    image: mm-class-tracker-image
    container_name: mm-class-tracker
    build:
      context: .
      args:
        ENV_TYPE: dev
        UID: 1000
    command: >
      bash -c "
      trap 'echo SIGTERM received, shutting down...; exit' SIGTERM;
      while true; do
        sleep 1;
      done
      "
    tty: true
    user: "1000"
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    volumes:
      - /app/node_modules
      - /app/.venv
      - ./:/app
    env_file:
      - .env.dev
    restart: unless-stopped
    depends_on:
      - psql
      - redis

  psql:
    image: postgres:15.7
    container_name: mm-psql-class-tracker
    user: "1000:1000"
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    env_file:
      - .env.dev
    ports:
      - 8031:5432
    volumes:
      - ./.postgresql/data:/var/lib/postgresql/data
      - ./.postgresql/backups:/app/backups
  adminer:
    image: adminer
    container_name: mm-adminer-class-tracker
    environment:
      ADMINER_DEFAULT_SERVER: psql
    restart: always
    ports:
      - 8032:8080

  # redis-overcommit-on-host
  redis-overcommit:
    build: https://github.com/bkuhl/redis-overcommit-on-host.git
    restart: "no"
    privileged: true
    volumes:
      - /proc/sys/vm:/mnt/vm

  redis:
    image: redis
    container_name: redis-class-tracker
    command: sh -c 'redis-server --requirepass "$$REDIS_PASSWORD"'
    env_file:
      - .env.dev
    restart: unless-stopped

  rq_worker_default:
    image: mm-class-tracker-image
    container_name: class-tracker-rq-worker-default
    command: uv run python manage.py rqworker default
    user: "1000"
    volumes:
      - ./:/app
    env_file:
      - .env.dev
    restart: unless-stopped
    depends_on:
      - django_app
