# Generated by Django 5.0.2 on 2025-08-21 16:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('class_tracker', '0054_globalsettings'),
        ('discord_tracker', '0003_rename_verified_discorduser_is_verified_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='discorduser',
            name='is_trusted',
        ),
        migrations.AddField(
            model_name='discorduser',
            name='role',
            field=models.CharField(choices=[('regular', 'Regular User'), ('trusted', 'Trusted User'), ('discord_manager', 'Discord Manager')], default='regular', max_length=20),
        ),
        migrations.CreateModel(
            name='DiscordServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('server_id', models.CharField(db_index=True, max_length=64, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('icon_url', models.URLField(blank=True)),
                ('privacy_level', models.CharField(choices=[('public', 'Public - visible to all users'), ('privileged', 'Privileged - trusted/manager users only')], default='public', max_length=20)),
                ('custom_title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('datetime_last_synced', models.DateTimeField(blank=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_servers', to='discord_tracker.discorduser')),
                ('courses', models.ManyToManyField(blank=True, related_name='discord_servers', to='class_tracker.course')),
                ('instructors', models.ManyToManyField(blank=True, related_name='discord_servers', to='class_tracker.instructor')),
                ('schools', models.ManyToManyField(blank=True, related_name='discord_servers', to='class_tracker.school')),
                ('subjects', models.ManyToManyField(blank=True, related_name='discord_servers', to='class_tracker.subject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscordInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('invite_url', models.URLField(db_index=True, unique=True)),
                ('notes_md', models.CharField(blank=True, max_length=511)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('max_uses', models.PositiveIntegerField(blank=True, default=0)),
                ('uses_count', models.PositiveIntegerField(default=0)),
                ('is_valid', models.BooleanField(default=True)),
                ('datetime_approved', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_invites', to='discord_tracker.discorduser')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_invites', to='discord_tracker.discorduser')),
                ('discord_server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='discord_tracker.discordserver')),
            ],
        ),
        migrations.CreateModel(
            name='InviteUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('invite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='discord_tracker.discordinvite')),
                ('used_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invite_usages', to='discord_tracker.discorduser')),
            ],
        ),
        migrations.CreateModel(
            name='RequiredDiscordServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('discord_server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_for_access', to='discord_tracker.discordserver')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserVouch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('vouched_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vouches_received', to='discord_tracker.discorduser')),
                ('voucher', models.ForeignKey(limit_choices_to={'role__in': ['trusted', 'discord_manager']}, on_delete=django.db.models.deletion.CASCADE, related_name='vouches_given', to='discord_tracker.discorduser')),
            ],
        ),
        migrations.AddIndex(
            model_name='discordinvite',
            index=models.Index(fields=['is_valid', 'datetime_approved'], name='discord_tra_is_vali_7435e0_idx'),
        ),
        migrations.AddIndex(
            model_name='discordinvite',
            index=models.Index(fields=['expires_at'], name='discord_tra_expires_a8db1a_idx'),
        ),
        migrations.AddIndex(
            model_name='inviteusage',
            index=models.Index(fields=['invite', 'datetime_created'], name='discord_tra_invite__ba2bd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='uservouch',
            unique_together={('voucher', 'vouched_for')},
        ),
    ]
